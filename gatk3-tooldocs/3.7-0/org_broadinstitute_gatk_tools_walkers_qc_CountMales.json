{
  "summary": "Count the number of reads seen from male samples",
  "parallel": [],
  "activeregion": {},
  "partitiontype": "READ",
  "walkertype": "ReadWalker",
  "arguments": [
    {
      "summary": "An output file created by the walker.  Will overwrite contents if file exists",
      "name": "--out",
      "synonyms": "-o",
      "type": "PrintStream",
      "required": "no",
      "fulltext": "",
      "defaultValue": "stdout",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_out",
      "options": []
    }
  ],
  "refwindow": {},
  "description": "\n\n \u003cp\u003eThis tool counts the number of sequence reads seen from samples that are male according to the sample metadata.\u003c/p\u003e\n\n \u003ch3\u003eInput\u003c/h3\u003e\n \u003cp\u003e\n One or more BAM files.\n \u003c/p\u003e\n\n \u003ch3\u003eOutput\u003c/h3\u003e\n \u003cp\u003e\n Number of reads seen from male samples. If an output file name is provided, then the result will be written to that file.\n Otherwise it will be sent to standard console output.\n \u003c/p\u003e\n\n \u003ch3\u003eUsage example\u003c/h3\u003e\n \u003cpre\u003e\n java -jar GenomeAnalysisTK.jar \\\n   -T CountMales \\\n   -R reference.fasta \\\n   -I samples.bam \\\n   -o output.txt\n \u003c/pre\u003e",
  "name": "CountMales",
  "annotinfo": "",
  "readfilters": [
    {
      "filename": "org_broadinstitute_gatk_engine_filters_MalformedReadFilter.html",
      "name": "MalformedReadFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_BadCigarFilter.html",
      "name": "BadCigarFilter"
    }
  ],
  "downsampling": {
    "by": "NONE",
    "to_cov": -1
  },
  "group": "Diagnostics and Quality Control Tools",
  "annotfield": ""
}