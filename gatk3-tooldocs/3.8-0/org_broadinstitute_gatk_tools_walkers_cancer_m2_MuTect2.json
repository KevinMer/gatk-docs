{
  "summary": "Call somatic SNPs and indels via local re-assembly of haplotypes",
  "parallel": [
    {
      "arg": "-nct",
      "name": "NanoSchedulable",
      "link": "https://software.broadinstitute.org/gatk/documentation/tooldocs/org_broadinstitute_gatk_engine_CommandLineGATK.html#-nct"
    }
  ],
  "activeregion": {
    "ext": 100,
    "min": 50,
    "max": 300
  },
  "partitiontype": "LOCUS",
  "walkertype": "ActiveRegionWalker",
  "arguments": [
    {
      "summary": "Threshold for the probability of a profile state being active.",
      "name": "--activeProbabilityThreshold",
      "synonyms": "-ActProbThresh",
      "type": "Double",
      "required": "no",
      "fulltext": "",
      "defaultValue": "0.002",
      "minValue": "0.0",
      "maxValue": "1.0",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "The active region extension; if not provided defaults to Walker annotated default",
      "name": "--activeRegionExtension",
      "synonyms": "-activeRegionExtension",
      "type": "Integer",
      "required": "no",
      "fulltext": "",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "Use this interval list file as the active regions to process",
      "name": "--activeRegionIn",
      "synonyms": "-AR",
      "type": "List[IntervalBinding[Feature]]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_in",
      "options": []
    },
    {
      "summary": "The active region maximum size; if not provided defaults to Walker annotated default",
      "name": "--activeRegionMaxSize",
      "synonyms": "-activeRegionMaxSize",
      "type": "Integer",
      "required": "no",
      "fulltext": "",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "Output the active region to this IGV formatted file",
      "name": "--activeRegionOut",
      "synonyms": "-ARO",
      "type": "PrintStream",
      "required": "no",
      "fulltext": "If provided, this walker will write out its active and inactive regions\n to this file in the IGV formatted TAB deliminated output:\n\n http://www.broadinstitute.org/software/igv/IGV\n\n Intended to make debugging the active region calculations easier",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_out",
      "options": []
    },
    {
      "summary": "Output the raw activity profile results in IGV format",
      "name": "--activityProfileOut",
      "synonyms": "-APO",
      "type": "PrintStream",
      "required": "no",
      "fulltext": "If provided, this walker will write out its activity profile (per bp probabilities of being active)\n to this file in the IGV formatted TAB deliminated output:\n\n http://www.broadinstitute.org/software/igv/IGV\n\n Intended to make debugging the activity profile calculations easier",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_out",
      "options": []
    },
    {
      "summary": "Set of alleles to use in genotyping",
      "name": "--alleles",
      "synonyms": "-alleles",
      "type": "RodBinding[VariantContext]",
      "required": "no",
      "fulltext": "When --genotyping_mode is set to GENOTYPE_GIVEN_ALLELES mode, the caller will genotype the samples using only the alleles provide in this callset. Note that this is not well tested in HaplotypeCaller, and is definitely not suitable for use with HaplotypeCaller in -ERC GVCF mode. In addition, it does not apply to MuTect2 at all.",
      "defaultValue": "none",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "BCF2, VCF, VCF3",
      "kind": "optional_in",
      "options": []
    },
    {
      "summary": "Allow graphs that have non-unique kmers in the reference",
      "name": "--allowNonUniqueKmersInRef",
      "synonyms": "-allowNonUniqueKmersInRef",
      "type": "boolean",
      "required": "no",
      "fulltext": "By default, the program does not allow processing of reference sections that contain non-unique kmers. Disabling\n this check may cause problems in the assembly graph.",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_flag",
      "options": []
    },
    {
      "summary": "Annotate all sites with PLs",
      "name": "--allSitePLs",
      "synonyms": "-allSitePLs",
      "type": "boolean",
      "required": "no",
      "fulltext": "Experimental argument FOR USE WITH UnifiedGenotyper ONLY: if SNP likelihood model\n is specified, and if EMIT_ALL_SITES output mode is set, when we set this argument then we\n will also emit PLs at all sites. This will give a measure of reference confidence and a\n measure of which alt alleles are more plausible (if any).\n WARNINGS:\n - This feature will inflate VCF file size considerably.\n - All SNP ALT alleles will be emitted with corresponding 10 PL values.\n - An error will be emitted if EMIT_ALL_SITES is not set, or if anything other than diploid\n SNP model is used\n - THIS WILL NOT WORK WITH HaplotypeCaller, GenotypeGVCFs or MuTect2! Use HaplotypeCaller with\n -ERC GVCF then GenotypeGVCFs instead. See the Best Practices documentation for more information.",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_flag",
      "options": []
    },
    {
      "summary": "Annotate number of alleles observed",
      "name": "--annotateNDA",
      "synonyms": "-nda",
      "type": "boolean",
      "required": "no",
      "fulltext": "Depending on the value of the --max_alternate_alleles argument, we may genotype only a fraction of the alleles\n being sent on for genotyping. Using this argument instructs the genotyper to annotate (in the INFO field) the\n number of alternate alleles that were originally discovered (but not necessarily genotyped) at the site.",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_flag",
      "options": []
    },
    {
      "summary": "One or more specific annotations to apply to variant calls",
      "name": "--annotation",
      "synonyms": "-A",
      "type": "List[String]",
      "required": "no",
      "fulltext": "Which annotations to add to the output VCF file. See the VariantAnnotator -list argument to view available annotations.",
      "defaultValue": "[DepthPerAlleleBySample, BaseQualitySumPerAlleleBySample, TandemRepeatAnnotator, OxoGReadCounts]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "Enable artifact detection for creating panels of normals",
      "name": "--artifact_detection_mode",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "Artifact detection mode is used to prepare a panel of normals. This maintains the specified tumor LOD threshold,\n but disables the remaining pragmatic filters. See usage examples above for more information.",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_flag",
      "options": []
    },
    {
      "summary": "File to which assembled haplotypes should be written",
      "name": "--bamOutput",
      "synonyms": "-bamout",
      "type": "GATKSAMFileWriter",
      "required": "no",
      "fulltext": "The assembled haplotypes and locally realigned reads will be written as BAM to this file if requested.  This is\n intended to be used only for troubleshooting purposes, in specific areas where you want to better understand\n why the caller is making specific calls. Turning on this mode may result in serious performance cost for the\n caller, so we do NOT recommend using this argument systematically as it will significantly increase runtime.\n\n The candidate haplotypes (called or all, depending on mode) are emitted as single reads covering the entire\n active region, coming from sample \"HC\" and a special read group called \"ArtificialHaplotype\". This will increase\n the pileup depth compared to what would be expected from the reads only, especially in complex regions.\n\n The reads are written out containing an \"HC\" tag (integer) that encodes which haplotype each read best matches\n according to the haplotype caller\u0027s likelihood calculation.  The use of this tag is primarily intended\n to allow good coloring of reads in IGV.  Simply go to \"Color Alignments By \u003e Tag\" and enter \"HC\" to more\n easily see which reads go with these haplotype. You can also tell IGV to group reads by sample, which will\n separate the potential haplotypes from the reads. These features are illustrated in\n \u003ca href\u003d\"https://www.dropbox.com/s/xvy7sbxpf13x5bp/haplotypecaller%20bamout%20for%20docs.png\"\u003ethis screenshot\u003c/a\u003e.\n\n Note that only reads that are actually informative about the haplotypes are emitted with the HC tag.\n By informative we mean that there\u0027s a meaningful difference in the likelihood of the read coming from one\n haplotype compared to the next best haplotype. When coloring reads by HC tag in IGV, uninformative reads will\n remain grey.\n\n Note also that not every input read is emitted to the bam in this mode. To include all trimmed, downsampled,\n filtered and uninformative reads, add the \u003ccode\u003e--emitDroppedReads\u003c/code\u003e argument.\n\n If multiple BAMs are passed as input to the tool (as is common for MuTect2), then they will be combined in the\n \u003ccode\u003e-bamout\u003c/code\u003e output and tagged with the appropriate sample names.",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_out",
      "options": []
    },
    {
      "summary": "Which haplotypes should be written to the BAM",
      "name": "--bamWriterType",
      "synonyms": "-bamWriterType",
      "type": "Type",
      "required": "no",
      "fulltext": "The type of \u003ccode\u003e-bamout\u003c/code\u003e output we want to see. This determines whether HC will write out all of the haplotypes it\n considered (top 128 max) or just the ones that were selected as alleles and assigned to samples.",
      "defaultValue": "CALLED_HAPLOTYPES",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": [
        {
          "summary": "A mode that\u0027s for method developers.  Writes out all of the possible\n haplotypes considered, as well as reads aligned to each",
          "name": "ALL_POSSIBLE_HAPLOTYPES"
        },
        {
          "summary": "A mode for users.  Writes out the reads aligned only to the called\n haplotypes.  Useful to understand why the caller is calling what it is",
          "name": "CALLED_HAPLOTYPES"
        }
      ]
    },
    {
      "summary": "The sigma of the band pass filter Gaussian kernel; if not provided defaults to Walker annotated default",
      "name": "--bandPassSigma",
      "synonyms": "-bandPassSigma",
      "type": "Double",
      "required": "no",
      "fulltext": "",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "comparison VCF file",
      "name": "--comp",
      "synonyms": "-comp",
      "type": "List[RodBinding[VariantContext]]",
      "required": "no",
      "fulltext": "If a call overlaps with a record from the provided comp track, the INFO field will be annotated\n  as such in the output with the track name (e.g. -comp:FOO will have \u0027FOO\u0027 in the INFO field).\n  Records that are filtered in the comp track will be ignored.\n  Note that \u0027dbSNP\u0027 has been special-cased (see the --dbsnp argument).",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "BCF2, VCF, VCF3",
      "kind": "advanced_in",
      "options": []
    },
    {
      "summary": "1000G consensus mode",
      "name": "--consensus",
      "synonyms": "-consensus",
      "type": "boolean",
      "required": "no",
      "fulltext": "This argument is specifically intended for 1000G consensus analysis mode. Setting this flag will inject all\n provided alleles to the assembly graph but will not forcibly genotype all of them.",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_flag",
      "options": []
    },
    {
      "summary": "Contamination per sample",
      "name": "--contamination_fraction_per_sample_file",
      "synonyms": "-contaminationFile",
      "type": "File",
      "required": "no",
      "fulltext": "This argument specifies a file with two columns \"sample\" and \"contamination\" (separated by a tab)\n  specifying the contamination level for those samples (where contamination is given as a\n  decimal number, not an integer) per line. There should be no header. Samples that do not appear\n  in this file will be processed with CONTAMINATION_FRACTION.",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "Fraction of contamination to aggressively remove",
      "name": "--contamination_fraction_to_filter",
      "synonyms": "-contamination",
      "type": "double",
      "required": "no",
      "fulltext": "If this fraction is greater is than zero, the caller will aggressively attempt to remove\n contamination through biased down-sampling of reads (for all samples). Basically, it will ignore the\n contamination fraction of reads for each alternate allele.  So if the pileup contains N\n total bases, then we will try to remove (N * contamination fraction) bases for each alternate\n allele.",
      "defaultValue": "0.0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "VCF file of COSMIC sites",
      "name": "--cosmic",
      "synonyms": "-cosmic",
      "type": "List[RodBinding[VariantContext]]",
      "required": "no",
      "fulltext": "MuTect2 has the ability to use COSMIC data in conjunction with dbSNP to adjust the threshold for evidence of a variant\n in the normal.  If a variant is present in dbSNP, but not in COSMIC, then more evidence is required from the normal\n sample to prove the variant is not present in germline.",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "BCF2, VCF, VCF3",
      "kind": "optional_in",
      "options": []
    },
    {
      "summary": "dbSNP file",
      "name": "--dbsnp",
      "synonyms": "-D",
      "type": "RodBinding[VariantContext]",
      "required": "no",
      "fulltext": "rsIDs from this file are used to populate the ID column of the output.  Also, the DB INFO flag will be set when appropriate.\n dbSNP overlap is only used to require more evidence of absence in the normal if the variant in question has been seen before in germline.",
      "defaultValue": "none",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "BCF2, VCF, VCF3",
      "kind": "optional_in",
      "options": []
    },
    {
      "summary": "LOD threshold for calling normal non-variant at dbsnp sites",
      "name": "--dbsnp_normal_lod",
      "synonyms": "NA",
      "type": "double",
      "required": "no",
      "fulltext": "The LOD threshold for the normal is typically made more strict if the variant has been seen in dbSNP (i.e. another\n normal sample). We thus require MORE evidence that a variant is NOT seen in this tumor\u0027s normal if it has been observed as a germline variant before.",
      "defaultValue": "5.5",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Print out very verbose debug information about each triggering active region",
      "name": "--debug",
      "synonyms": "-debug",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_flag",
      "options": []
    },
    {
      "summary": "trace this read name through the calling process",
      "name": "--debug_read_name",
      "synonyms": "NA",
      "type": "String",
      "required": "no",
      "fulltext": "",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Don\u0027t skip calculations in ActiveRegions with no variants",
      "name": "--disableOptimizations",
      "synonyms": "-disableOptimizations",
      "type": "boolean",
      "required": "no",
      "fulltext": "If set, certain \"early exit\" optimizations in HaplotypeCaller, which aim to save compute and time by skipping\n calculations if an ActiveRegion is determined to contain no variants, will be disabled. This is most likely to be\n useful if you\u0027re using the \u003ccode\u003e-bamout\u003c/code\u003e argument to examine the placement of reads following reassembly\n and are interested in seeing the mapping of reads in regions with no variations. Setting the \u003ccode\u003e-forceActive\u003c/code\u003e\n and \u003ccode\u003e-dontTrimActiveRegions\u003c/code\u003e flags may also be helpful.",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_flag",
      "options": []
    },
    {
      "summary": "Disable physical phasing",
      "name": "--doNotRunPhysicalPhasing",
      "synonyms": "-doNotRunPhysicalPhasing",
      "type": "boolean",
      "required": "no",
      "fulltext": "As of GATK 3.3, HaplotypeCaller outputs physical (read-based) information (see version 3.3 release notes and documentation for details). This argument disables that behavior.",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_flag",
      "options": []
    },
    {
      "summary": "Disable iterating over kmer sizes when graph cycles are detected",
      "name": "--dontIncreaseKmerSizesForCycles",
      "synonyms": "-dontIncreaseKmerSizesForCycles",
      "type": "boolean",
      "required": "no",
      "fulltext": "When graph cycles are detected, the normal behavior is to increase kmer sizes iteratively until the cycles are\n resolved. Disabling this behavior may cause the program to give up on assembling the ActiveRegion.",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_flag",
      "options": []
    },
    {
      "summary": "If specified, we will not trim down the active region from the full region (active + extension) to just the active interval for genotyping",
      "name": "--dontTrimActiveRegions",
      "synonyms": "-dontTrimActiveRegions",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_flag",
      "options": []
    },
    {
      "summary": "If specified, we will not analyze soft clipped bases in the reads",
      "name": "--dontUseSoftClippedBases",
      "synonyms": "-dontUseSoftClippedBases",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_flag",
      "options": []
    },
    {
      "summary": "Emit reads that are dropped for filtering, trimming, realignment failure",
      "name": "--emitDroppedReads",
      "synonyms": "-edr",
      "type": "boolean",
      "required": "no",
      "fulltext": "Determines whether dropped reads will be tracked and emitted when \u003ccode\u003e-bamout\u003c/code\u003e is specified. Use this in combination\n with a specific interval of interest to avoid accumulating a large number of reads in the \u003ccode\u003e-bamout\u003c/code\u003e file.",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_flag",
      "options": []
    },
    {
      "summary": "Mode for emitting reference confidence scores",
      "name": "--emitRefConfidence",
      "synonyms": "-ERC",
      "type": "ReferenceConfidenceMode",
      "required": "no",
      "fulltext": "The reference confidence mode makes it possible to emit variant calls in GVCF format, which includes either a per-base\n pair (BP_RESOLUTION) or a summarized (GVCF) confidence estimate for each position being strictly homozygous-reference.\n See http://www.broadinstitute.org/gatk/guide/article?id\u003d2940 for more details of how this works.\n Note that if you use \u003ccode\u003e-ERC\u003c/code\u003e to emit a \u003ccode\u003eGVCF\u003c/code\u003e or \u003ccode\u003eBP_RESOLUTION\u003c/code\u003e output, you either\n need to give the output file the extension \u003ccode\u003e.g.vcf\u003c/code\u003e or set the parameters \u003ccode\u003e-variant_index_type LINEAR\u003c/code\u003e\n and \u003ccode\u003e-variant_index_parameter 128000\u003c/code\u003e (with those exact values!). This has to do with index compression.",
      "defaultValue": "NONE",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": [
        {
          "summary": "Regular calling without emitting reference confidence calls.",
          "name": "NONE"
        },
        {
          "summary": "Reference model emitted site by site.",
          "name": "BP_RESOLUTION"
        },
        {
          "summary": "Reference model emitted with condensed non-variant blocks, i.e. the GVCF format.",
          "name": "GVCF"
        }
      ]
    },
    {
      "summary": "turn on clustered read position filter",
      "name": "--enable_clustered_read_position_filter",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_flag",
      "options": []
    },
    {
      "summary": "turn on strand artifact filter",
      "name": "--enable_strand_artifact_filter",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_flag",
      "options": []
    },
    {
      "summary": "One or more specific annotations to exclude",
      "name": "--excludeAnnotation",
      "synonyms": "-XA",
      "type": "List[String]",
      "required": "no",
      "fulltext": "Which annotations to exclude from output in the VCF file.  Note that this argument has higher priority than the -A or -G arguments,\n so annotations will be excluded even if they are explicitly included with the other options.",
      "defaultValue": "[SpanningDeletions]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "If provided, all bases will be tagged as active",
      "name": "--forceActive",
      "synonyms": "-forceActive",
      "type": "boolean",
      "required": "no",
      "fulltext": "For the active region walker to treat all bases as active.  Useful for debugging when you want to force something like\n the HaplotypeCaller to process a specific interval you provide the GATK",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_flag",
      "options": []
    },
    {
      "summary": "Flat gap continuation penalty for use in the Pair HMM",
      "name": "--gcpHMM",
      "synonyms": "-gcpHMM",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "10",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "Specifies how to determine the alternate alleles to use for genotyping",
      "name": "--genotyping_mode",
      "synonyms": "-gt_mode",
      "type": "GenotypingOutputMode",
      "required": "no",
      "fulltext": "",
      "defaultValue": "DISCOVERY",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": [
        {
          "summary": "The genotyper will choose the most likely alternate allele",
          "name": "DISCOVERY"
        },
        {
          "summary": "Only the alleles passed by the user should be considered.",
          "name": "GENOTYPE_GIVEN_ALLELES"
        }
      ]
    },
    {
      "summary": "Write debug assembly graph information to this file",
      "name": "--graphOutput",
      "synonyms": "-graph",
      "type": "PrintStream",
      "required": "no",
      "fulltext": "This argument is meant for debugging and is not immediately useful for normal analysis use.",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_out",
      "options": []
    },
    {
      "summary": "One or more classes/groups of annotations to apply to variant calls",
      "name": "--group",
      "synonyms": "-G",
      "type": "String[]",
      "required": "no",
      "fulltext": "Which groups of annotations to add to the output VCF file. See the VariantAnnotator -list argument to view available groups.",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Heterozygosity value used to compute prior likelihoods for any locus",
      "name": "--heterozygosity",
      "synonyms": "-hets",
      "type": "Double",
      "required": "no",
      "fulltext": "The expected heterozygosity value used to compute prior probability that a locus is non-reference. See\n https://software.broadinstitute.org/gatk/documentation/article?id\u003d8603 for more details.",
      "defaultValue": "0.001",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Standard deviation of eterozygosity for SNP and indel calling.",
      "name": "--heterozygosity_stdev",
      "synonyms": "-heterozygosityStandardDeviation",
      "type": "double",
      "required": "no",
      "fulltext": "The standard deviation of the distribution of alt allele fractions. The above heterozygosity parameters give\n the *mean* of this distribution; this parameter gives its spread.",
      "defaultValue": "0.01",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Heterozygosity for indel calling",
      "name": "--indel_heterozygosity",
      "synonyms": "-indelHeterozygosity",
      "type": "double",
      "required": "no",
      "fulltext": "This argument informs the prior probability of having an indel at a site.",
      "defaultValue": "1.25E-4",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Initial LOD threshold for calling normal variant",
      "name": "--initial_normal_lod",
      "synonyms": "NA",
      "type": "double",
      "required": "no",
      "fulltext": "This is the LOD threshold corresponding to the minimum amount of reference evidence in the normal for a variant to be considered somatic and emitted in the VCF",
      "defaultValue": "0.5",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Initial LOD threshold for calling tumor variant",
      "name": "--initial_tumor_lod",
      "synonyms": "NA",
      "type": "double",
      "required": "no",
      "fulltext": "This is the LOD threshold that a variant must pass in the tumor to be emitted to the VCF. Note that the variant may pass this threshold yet still be annotated as FILTERed based on other criteria.",
      "defaultValue": "4.0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Input prior for calls",
      "name": "--input_prior",
      "synonyms": "-inputPrior",
      "type": "List[Double]",
      "required": "no",
      "fulltext": "By default, the prior specified with the argument --heterozygosity/-hets is used for variant discovery at a\n particular locus, using an infinite sites model (see e.g. Waterson, 1975 or Tajima, 1996). This model asserts that\n the probability of having a population of k variant sites in N chromosomes is proportional to theta/k, for 1\u003d1:N.\n However, there are instances where using this prior might not be desirable, e.g. for population studies where prior\n might not be appropriate, as for example when the ancestral status of the reference allele is not known.\n\n This argument allows you to manually specify a list of probabilities for each AC\u003e0 to be used as\n priors for genotyping, with the following restrictions: only diploid calls are supported; you must specify 2 *\n N values where N is the number of samples; probability values must be positive and specified in Double format,\n in linear space (not log10 space nor Phred-scale); and all values must sume to 1.\n\n For completely flat priors,  specify the same value (\u003d1/(2*N+1)) 2*N times, e.g.\n      -inputPrior 0.33 -inputPrior 0.33\n for the single-sample diploid case.",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "Kmer size to use in the read threading assembler",
      "name": "--kmerSize",
      "synonyms": "-kmerSize",
      "type": "List[Integer]",
      "required": "no",
      "fulltext": "Multiple kmer sizes can be specified, using e.g. `-kmerSize 10 -kmerSize 25`.",
      "defaultValue": "[10, 25]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "Print out very verbose M2 debug information",
      "name": "--m2debug",
      "synonyms": "-m2debug",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_flag",
      "options": []
    },
    {
      "summary": "Threshold for maximum alternate allele fraction in normal",
      "name": "--max_alt_allele_in_normal_fraction",
      "synonyms": "NA",
      "type": "double",
      "required": "no",
      "fulltext": "This argument is used for the internal \"alt_allele_in_normal\" filter.\n A variant will PASS the filter if the value tested is lower or equal to the threshold value. It will FAIL the filter if the value tested is greater than the max threshold value.",
      "defaultValue": "0.03",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Threshold for maximum alternate allele counts in normal",
      "name": "--max_alt_alleles_in_normal_count",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "This argument is used for the internal \"alt_allele_in_normal\" filter.\n A variant will PASS the filter if the value tested is lower or equal to the threshold value. It will FAIL the filter if the value tested is greater than the max threshold value.",
      "defaultValue": "1",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Threshold for maximum alternate allele quality score sum in normal",
      "name": "--max_alt_alleles_in_normal_qscore_sum",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "This argument is used for the internal \"alt_allele_in_normal\" filter.\n A variant will PASS the filter if the value tested is lower or equal to the threshold value. It will FAIL the filter if the value tested is greater than the max threshold value.",
      "defaultValue": "20",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Maximum number of alternate alleles to genotype",
      "name": "--max_alternate_alleles",
      "synonyms": "-maxAltAlleles",
      "type": "int",
      "required": "no",
      "fulltext": "If there are more than this number of alternate alleles presented to the genotyper (either through discovery or\n GENOTYPE_GIVEN_ALLELES), then only this many alleles will be used.  Note that genotyping sites with many\n alternate alleles is both CPU and memory intensive and it scales exponentially based on the number of alternate\n alleles.  Unless there is a good reason to change the default value, we highly recommend that you not play around\n with this parameter.\n\n See also {@link #MAX_GENOTYPE_COUNT}.",
      "defaultValue": "6",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "Maximum number of genotypes to consider at any site",
      "name": "--max_genotype_count",
      "synonyms": "-maxGT",
      "type": "int",
      "required": "no",
      "fulltext": "If there are more than this number of genotypes at a locus presented to the genotyper, then only this many\n genotypes will be used. This is intended to deal with sites where the combination of high ploidy and high alt\n allele count can lead to an explosion in the number of possible genotypes, with extreme adverse effects on\n runtime performance.\n\n How does it work? The possible genotypes are simply different ways of partitioning alleles given a specific\n ploidy assumption. Therefore, we remove genotypes from consideration by removing alternate alleles that are the\n least well supported. The estimate of allele support is based on the ranking of the candidate haplotypes coming\n out of the graph building step. Note however that the reference allele is always kept.\n\n The maximum number of alternative alleles used in the genotyping step will be the lesser of the two:\n 1. the largest number of alt alleles, given ploidy, that yields a genotype count no higher than {@link #MAX_GENOTYPE_COUNT}\n 2. the value of {@link #MAX_ALTERNATE_ALLELES}\n\n As noted above, genotyping sites with large genotype counts is both CPU and memory intensive. Unless you have\n a good reason to change the default value, we highly recommend that you not play around with this parameter.\n\n See also {@link #MAX_ALTERNATE_ALLELES}.",
      "defaultValue": "1024",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "Maximum number of PL values to output",
      "name": "--max_num_PL_values",
      "synonyms": "-maxNumPLValues",
      "type": "int",
      "required": "no",
      "fulltext": "Determines the maximum number of PL values that will be logged in the output.  If the number of genotypes\n (which is determined by the ploidy and the number of alleles) exceeds the value provided by this argument,\n then output of all of the PL values will be suppressed.",
      "defaultValue": "100",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "Maximum number of haplotypes to consider for your population",
      "name": "--maxNumHaplotypesInPopulation",
      "synonyms": "-maxNumHaplotypesInPopulation",
      "type": "int",
      "required": "no",
      "fulltext": "The assembly graph can be quite complex, and could imply a very large number of possible haplotypes.  Each haplotype\n considered requires N PairHMM evaluations if there are N reads across all samples.  In order to control the\n run of the haplotype caller we only take maxNumHaplotypesInPopulation paths from the graph, in order of their\n weights, no matter how many paths are possible to generate from the graph.  Putting this number too low\n will result in dropping true variation because paths that include the real variant are not even considered.\n You can consider increasing this number when calling organisms with high heterozygosity.",
      "defaultValue": "128",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "Maximum reads per sample given to traversal map() function",
      "name": "--maxReadsInMemoryPerSample",
      "synonyms": "-maxReadsInMemoryPerSample",
      "type": "int",
      "required": "no",
      "fulltext": "What is the maximum number of reads we\u0027re willing to hold in memory per sample\n during the traversal?  This limits our exposure to unusually large amounts\n of coverage in the engine.",
      "defaultValue": "30000",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "Maximum reads in an active region",
      "name": "--maxReadsInRegionPerSample",
      "synonyms": "-maxReadsInRegionPerSample",
      "type": "int",
      "required": "no",
      "fulltext": "When downsampling, level the coverage of the reads in each sample to no more than maxReadsInRegionPerSample reads,\n not reducing coverage at any read start to less than minReadsPerAlignmentStart",
      "defaultValue": "1000",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Maximum total reads given to traversal map() function",
      "name": "--maxTotalReadsInMemory",
      "synonyms": "-maxTotalReadsInMemory",
      "type": "int",
      "required": "no",
      "fulltext": "What is the maximum number of reads we\u0027re willing to hold in memory per sample\n during the traversal?  This limits our exposure to unusually large amounts\n of coverage in the engine.",
      "defaultValue": "10000000",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "Minimum base quality required to consider a base for calling",
      "name": "--min_base_quality_score",
      "synonyms": "-mbq",
      "type": "byte",
      "required": "no",
      "fulltext": "",
      "defaultValue": "10",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Minimum length of a dangling branch to attempt recovery",
      "name": "--minDanglingBranchLength",
      "synonyms": "-minDanglingBranchLength",
      "type": "int",
      "required": "no",
      "fulltext": "When constructing the assembly graph we are often left with \"dangling\" branches.  The assembly engine attempts to rescue these branches\n by merging them back into the main graph.  This argument describes the minimum length of a dangling branch needed for the engine to\n try to rescue it.  A smaller number here will lead to higher sensitivity to real variation but also to a higher number of false positives.",
      "defaultValue": "4",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "Minimum support to not prune paths in the graph",
      "name": "--minPruning",
      "synonyms": "-minPruning",
      "type": "int",
      "required": "no",
      "fulltext": "Paths with fewer supporting kmers than the specified threshold will be pruned from the graph.\n\n Be aware that this argument can dramatically affect the results of variant calling and should only be used with great caution.\n Using a prune factor of 1 (or below) will prevent any pruning from the graph, which is generally not ideal; it can make the\n calling much slower and even less accurate (because it can prevent effective merging of \"tails\" in the graph).  Higher values\n tend to make the calling much faster, but also lowers the sensitivity of the results (because it ultimately requires higher\n depth to produce calls).",
      "defaultValue": "2",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "Minimum number of reads sharing the same alignment start for each genomic location in an active region",
      "name": "--minReadsPerAlignmentStart",
      "synonyms": "-minReadsPerAlignStart",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "5",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "LOD threshold for calling normal non-germline",
      "name": "--normal_lod",
      "synonyms": "NA",
      "type": "double",
      "required": "no",
      "fulltext": "This is a measure of the minimum evidence to support that a variant observed in the tumor is not also present in the normal.",
      "defaultValue": "2.2",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "VCF file of sites observed in normal",
      "name": "--normal_panel",
      "synonyms": "-PON",
      "type": "List[RodBinding[VariantContext]]",
      "required": "no",
      "fulltext": "A panel of normals can be a useful (optional) input to help filter out commonly seen sequencing noise that may appear as low allele-fraction somatic variants.",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "BCF2, VCF, VCF3",
      "kind": "optional_in",
      "options": []
    },
    {
      "summary": "Number of samples that must pass the minPruning threshold",
      "name": "--numPruningSamples",
      "synonyms": "-numPruningSamples",
      "type": "int",
      "required": "no",
      "fulltext": "If fewer samples than the specified number pass the minPruning threshold for a given path, that path will be eliminated from the graph.",
      "defaultValue": "1",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "File to which variants should be written",
      "name": "--out",
      "synonyms": "-o",
      "type": "VariantContextWriter",
      "required": "no",
      "fulltext": "",
      "defaultValue": "stdout",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_out",
      "options": []
    },
    {
      "summary": "Which type of calls we should output",
      "name": "--output_mode",
      "synonyms": "-out_mode",
      "type": "OutputMode",
      "required": "no",
      "fulltext": "Experimental argument FOR USE WITH UnifiedGenotyper ONLY. When using HaplotypeCaller, use -ERC\n instead. When using GenotypeGVCFs, see -allSites.",
      "defaultValue": "EMIT_VARIANTS_ONLY",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": [
        {
          "summary": "produces calls only at variant sites",
          "name": "EMIT_VARIANTS_ONLY"
        },
        {
          "summary": "produces calls at variant sites and confident reference sites",
          "name": "EMIT_ALL_CONFIDENT_SITES"
        },
        {
          "summary": "produces calls at any callable site regardless of confidence; this argument is intended only for point\n mutations (SNPs) in DISCOVERY mode or generally when running in GENOTYPE_GIVEN_ALLELES mode; it will by\n no means produce a comprehensive set of indels in DISCOVERY mode",
          "name": "EMIT_ALL_SITES"
        }
      ]
    },
    {
      "summary": "The global assumed mismapping rate for reads",
      "name": "--phredScaledGlobalReadMismappingRate",
      "synonyms": "-globalMAPQ",
      "type": "int",
      "required": "no",
      "fulltext": "The phredScaledGlobalReadMismappingRate reflects the average global mismapping rate of all reads, regardless of their\n mapping quality.  This term effects the probability that a read originated from the reference haplotype, regardless of\n its edit distance from the reference, in that the read could have originated from the reference haplotype but\n from another location in the genome.  Suppose a read has many mismatches from the reference, say like 5, but\n has a very high mapping quality of 60.  Without this parameter, the read would contribute 5 * Q30 evidence\n in favor of its 5 mismatch haplotype compared to reference, potentially enough to make a call off that single\n read for all of these events.  With this parameter set to Q30, though, the maximum evidence against any haplotype\n that this (and any) read could contribute is Q30.\n\n Set this term to any negative number to turn off the global mapping rate.",
      "defaultValue": "45",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "threshold for clustered read position artifact MAD",
      "name": "--pir_mad_threshold",
      "synonyms": "NA",
      "type": "double",
      "required": "no",
      "fulltext": "This argument is used for the M1-style read position filter",
      "defaultValue": "3.0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "threshold for clustered read position artifact median",
      "name": "--pir_median_threshold",
      "synonyms": "NA",
      "type": "double",
      "required": "no",
      "fulltext": "This argument is used for the M1-style read position filter",
      "defaultValue": "10.0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Phred scale quality score constant to use in power calculations",
      "name": "--power_constant_qscore",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "This argument is used for the M1-style strand bias filter",
      "defaultValue": "30",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Ploidy per sample. For pooled data, set to (Number of samples in each pool * Sample Ploidy).",
      "name": "--sample_ploidy",
      "synonyms": "-ploidy",
      "type": "int",
      "required": "no",
      "fulltext": "Sample ploidy - equivalent to number of chromosome copies per pool. For pooled experiments this should be set to\n   the number of samples in pool multiplied by individual sample ploidy.",
      "defaultValue": "2",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "The minimum phred-scaled confidence threshold at which variants should be called",
      "name": "--standard_min_confidence_threshold_for_calling",
      "synonyms": "-stand_call_conf",
      "type": "double",
      "required": "no",
      "fulltext": "The minimum phred-scaled confidence threshold at which variants should be called. Only variant sites with QUAL equal\n or greater than this threshold will be called. Note that since version 3.7, we no longer differentiate high confidence\n from low confidence calls at the calling step. The default call confidence threshold is set low intentionally to achieve\n high sensitivity, which will allow false positive calls as a side effect. Be sure to perform some kind of filtering after\n calling to reduce the amount of false positives in your final callset. Note that when HaplotypeCaller is used in GVCF mode\n (using either -ERC GVCF or -ERC BP_RESOLUTION) the call threshold is automatically set to zero. Call confidence thresholding\n will then be performed in the subsequent GenotypeGVCFs command.",
      "defaultValue": "10.0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "LOD threshold for calling tumor variant",
      "name": "--tumor_lod",
      "synonyms": "NA",
      "type": "double",
      "required": "no",
      "fulltext": "Only variants with tumor LODs exceeding this threshold can pass filtering.",
      "defaultValue": "6.3",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Use the contamination-filtered read maps for the purposes of annotating variants",
      "name": "--useFilteredReadsForAnnotations",
      "synonyms": "-useFilteredReadsForAnnotations",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_flag",
      "options": []
    },
    {
      "summary": "Use new AF model instead of the so-called exact model",
      "name": "--useNewAFCalculator",
      "synonyms": "-newQual",
      "type": "boolean",
      "required": "no",
      "fulltext": "This activates a model for calculating QUAL that was introduced in version 3.7 (November 2016). We expect this\n model will become the default in future versions.",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_flag",
      "options": []
    }
  ],
  "refwindow": {},
  "description": "\n\n \u003cp\u003eMuTect2 is a somatic SNP and indel caller that combines the DREAM challenge-winning somatic genotyping engine of the original MuTect (\u003ca href\u003d\u0027http://www.nature.com/nbt/journal/v31/n3/full/nbt.2514.html\u0027\u003eCibulskis et al., 2013\u003c/a\u003e) with the assembly-based machinery of \u003ca href\u003d\"https://www.broadinstitute.org/gatk/documentation/tooldocs/org_broadinstitute_gatk_tools_walkers_haplotypecaller_HaplotypeCaller.html\"\u003eHaplotypeCaller\u003c/a\u003e.\u003c/p\u003e\n\n \u003ch3\u003eHow MuTect2 works\u003c/h3\u003e\n \u003cp\u003eThe basic operation of MuTect2 proceeds similarly to that of the HaplotypeCaller, with a few key differences.\u003c/p\u003e\n \u003cp\u003eWhile the HaplotypeCaller relies on a ploidy assumption (diploid by default) to inform its genotype likelihood and variant quality calculations, MuTect2 allows for a varying allelic fraction for each variant, as is often seen in tumors with purity less than 100%, multiple subclones, and/or copy number variation (either local or aneuploidy). MuTect2 also differs from the HaplotypeCaller in that it does apply some hard filters to variants before producing output. Finally, some of the parameters used for ActiveRegion determination and graph assembly are set to different default values in MuTect2 compared to HaplotypeCaller.\u003c/p\u003e\n \u003cp\u003eNote that MuTect2 is designed to produce somatic variant calls only, and includes some logic to skip variant sites that are very clearly germline based on the evidence present in the Normal sample compared to the Tumor sample. This is done at an early stage to avoid spending computational resources on germline events. As a result the tool is NOT capable of emitting records for variant calls that are clearly germline unless it is run in artifact-detection mode, which is used for Panel-Of-Normals creation.\u003c/p\u003e\n \u003cp\u003eNote also that the GVCF generation capabilities of HaplotypeCaller are NOT available in MuTect2, even though some of the relevant arguments are listed below. There are currently no plans to make GVCF calling available in MuTect2.\u003c/p\u003e\n\n \u003ch3\u003eUsage examples\u003c/h3\u003e\n \u003cp\u003eThese are example commands that show how to run MuTect2 for typical use cases. Square brackets (\"[ ]\") indicate optional arguments. Note that parameter values shown here may not be the latest recommended; see the Best Practices documentation for detailed recommendations. \u003c/p\u003e\n\n \u003cbr /\u003e\n \u003ch4\u003eTumor/Normal variant calling\u003c/h4\u003e\n \u003cpre\u003e\n   java -jar GenomeAnalysisTK.jar \\\n     -T MuTect2 \\\n     -R reference.fasta \\\n     -I:tumor tumor.bam \\\n     -I:normal normal.bam \\\n     [--dbsnp dbSNP.vcf] \\\n     [--cosmic COSMIC.vcf] \\\n     [-L targets.interval_list] \\\n     -o output.vcf\n \u003c/pre\u003e\n\n \u003ch4\u003eNormal-only calling for panel of normals creation\u003c/h4\u003e\n \u003cpre\u003e\n   java -jar GenomeAnalysisTK.jar \\\n     -T MuTect2 \\\n     -R reference.fasta \\\n     -I:tumor normal1.bam \\\n     [--dbsnp dbSNP.vcf] \\\n     [--cosmic COSMIC.vcf] \\\n     --artifact_detection_mode \\\n     [-L targets.interval_list] \\\n     -o output.normal1.vcf\n \u003c/pre\u003e\n \u003cbr /\u003e\n For full PON creation, call each of your normals separately in artifact detection mode as shown above. Then use CombineVariants to output only sites where a variant was seen in at least two samples:\n \u003cpre\u003e\n   java -jar GenomeAnalysisTK.jar \\\n     -T CombineVariants \\\n     -R reference.fasta \\\n     -V output.normal1.vcf -V output.normal2.vcf [-V output.normal2.vcf ...] \\\n     -minN 2 \\\n     --setKey \"null\" \\\n     --filteredAreUncalled \\\n     --filteredrecordsmergetype KEEP_IF_ANY_UNFILTERED \\\n     [-L targets.interval_list] \\\n     -o MuTect2_PON.vcf\n \u003c/pre\u003e\n\n \u003ch3\u003eCaveats\u003c/h3\u003e\n \u003cul\u003e\n \u003cli\u003eAs noted in several places in the documentation, MuTect2 is currently released under BETA status; it is NOT recommended for production work and is NOT available for commercial/for-profit licensing.\u003c/li\u003e\n \u003cli\u003eMuTect2 currently only supports the calling of a single tumor-normal pair at a time.\u003c/li\u003e\n \u003cli\u003eTumor-only variant calling is possible but it is NOT supported and we will not answer any questions about it until it becomes a supported feature.\u003c/li\u003e\n \u003cli\u003eSome of the arguments listed below are not functional; they are exclusive to HaplotypeCaller and are listed here due to technical entanglements in the code. This will be resolved in the upcoming GATK 4 release.\u003c/li\u003e\n \u003c/ul\u003e",
  "name": "MuTect2",
  "annotinfo": "",
  "readfilters": [
    {
      "filename": "org_broadinstitute_gatk_engine_filters_MalformedReadFilter.html",
      "name": "MalformedReadFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_BadCigarFilter.html",
      "name": "BadCigarFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_UnmappedReadFilter.html",
      "name": "UnmappedReadFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_NotPrimaryAlignmentFilter.html",
      "name": "NotPrimaryAlignmentFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_FailsVendorQualityCheckFilter.html",
      "name": "FailsVendorQualityCheckFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_DuplicateReadFilter.html",
      "name": "DuplicateReadFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_MappingQualityUnavailableFilter.html",
      "name": "MappingQualityUnavailableFilter"
    }
  ],
  "downsampling": {
    "by": "BY_SAMPLE",
    "to_cov": 1000
  },
  "group": "Variant Discovery Tools",
  "annotfield": ""
}