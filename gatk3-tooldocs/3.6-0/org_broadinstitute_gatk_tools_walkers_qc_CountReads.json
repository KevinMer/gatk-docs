{
  "summary": "Count the number of reads",
  "parallel": [
    {
      "arg": "-nct",
      "name": "NanoSchedulable",
      "link": "https://www.broadinstitute.org/gatk/guide/tooldocs/org_broadinstitute_gatk_engine_CommandLineGATK.html#-nct"
    }
  ],
  "activeregion": {},
  "partitiontype": "READ",
  "walkertype": "ReadWalker",
  "arguments": [],
  "refwindow": {},
  "description": "\n\n \u003cp\u003e\n This is especially useful in combination with read filters (see the --read-filter command line argument) which\n allow you to count reads matching specific criteria (e.g. read group tags or quality parameters).\n \u003c/p\u003e\n\n\n \u003ch3\u003eInput\u003c/h3\u003e\n \u003cp\u003e\n One or more BAM files.\n \u003c/p\u003e\n\n \u003ch3\u003eOutput\u003c/h3\u003e\n \u003cp\u003e\n Number of reads seen. This is output to the terminal/stdout.\n \u003c/p\u003e\n\n \u003ch3\u003eUsage example\u003c/h3\u003e\n \u003cpre\u003e\n java -jar GenomeAnalysisTK.jar \\\n   -R reference.fasta \\\n   -T CountReads \\\n   -I input.bam \\\n   [-L input.intervals]\n \u003c/pre\u003e",
  "name": "CountReads",
  "annotinfo": "",
  "readfilters": [
    {
      "filename": "org_broadinstitute_gatk_engine_filters_MalformedReadFilter.html",
      "name": "MalformedReadFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_BadCigarFilter.html",
      "name": "BadCigarFilter"
    }
  ],
  "downsampling": {
    "by": "NONE",
    "to_cov": -1
  },
  "group": "Diagnostics and Quality Control Tools",
  "annotfield": ""
}