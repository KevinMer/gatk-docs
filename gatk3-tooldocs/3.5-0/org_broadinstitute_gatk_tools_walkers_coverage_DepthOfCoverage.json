{
  "summary": "Assess sequence coverage by a wide array of metrics, partitioned by sample, read group, or library",
  "parallel": [
    {
      "arg": "-nt",
      "name": "TreeReducible",
      "link": "http://www.broadinstitute.org/gatk/guide/tooldocs/org_broadinstitute_gatk_engine_CommandLineGATK.html#-nt"
    }
  ],
  "activeregion": {},
  "partitiontype": "NONE",
  "walkertype": "LocusWalker",
  "arguments": [
    {
      "summary": "Calculate coverage statistics over this list of genes",
      "name": "--calculateCoverageOverGenes",
      "synonyms": "-geneList",
      "type": "File",
      "required": "no",
      "fulltext": "Specify a RefSeq file for use in aggregating coverage statistics over genes.\n\n This argument is incompatible with --calculateCoverageOverGenes and --omitIntervalStatistics. A warning will be logged and no output file will be produced for the gene list if these arguments are enabled together.",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "How should overlapping reads from the same fragment be handled?",
      "name": "--countType",
      "synonyms": "NA",
      "type": "CountPileupType",
      "required": "no",
      "fulltext": "",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": [
        {
          "summary": "Count all reads independently (even if from the same fragment).",
          "name": "COUNT_READS"
        },
        {
          "summary": "Count all fragments (even if the reads that compose the fragment are not consistent at that base).",
          "name": "COUNT_FRAGMENTS"
        },
        {
          "summary": "Count all fragments (but only if the reads that compose the fragment are consistent at that base).",
          "name": "COUNT_FRAGMENTS_REQUIRE_SAME_BASE"
        }
      ]
    },
    {
      "summary": "Ignore sites consisting only of deletions",
      "name": "--ignoreDeletionSites",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_flag",
      "options": []
    },
    {
      "summary": "Include information on deletions",
      "name": "--includeDeletions",
      "synonyms": "-dels",
      "type": "boolean",
      "required": "no",
      "fulltext": "Consider a spanning deletion as contributing to coverage. Also enables deletion counts in per-base output.",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_flag",
      "options": []
    },
    {
      "summary": "Include sites where the reference is N",
      "name": "--includeRefNSites",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "Normally, sites where the reference is N (or another non-canonical base) are skipped. If this option is enabled, these sites will be included in DoC calculations if there is coverage from neighboring reads.",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_flag",
      "options": []
    },
    {
      "summary": "Maximum quality of bases to count towards depth",
      "name": "--maxBaseQuality",
      "synonyms": "NA",
      "type": "byte",
      "required": "no",
      "fulltext": "Bases with quality scores higher than this threshold will be skipped. The default value is the largest number that can be represented as a byte.",
      "defaultValue": "127",
      "minValue": "0.0",
      "maxValue": "127.0",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Maximum mapping quality of reads to count towards depth",
      "name": "--maxMappingQuality",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "Reads with mapping quality values higher than this threshold will be skipped. The default value is the largest number that can be represented as an integer by the program.",
      "defaultValue": "2147483647",
      "minValue": "0.0",
      "maxValue": "2.147483647E9",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Minimum quality of bases to count towards depth",
      "name": "--minBaseQuality",
      "synonyms": "-mbq",
      "type": "byte",
      "required": "no",
      "fulltext": "Bases with quality scores lower than this threshold will be skipped. This is set to -1 by default to disable the evaluation and ignore this threshold.",
      "defaultValue": "-1",
      "minValue": "0.0",
      "maxValue": "127.0",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Minimum mapping quality of reads to count towards depth",
      "name": "--minMappingQuality",
      "synonyms": "-mmq",
      "type": "int",
      "required": "no",
      "fulltext": "Reads with mapping quality values lower than this threshold will be skipped. This is set to -1 by default to disable the evaluation and ignore this threshold.",
      "defaultValue": "-1",
      "minValue": "0.0",
      "maxValue": "2.147483647E9",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Number of bins to use for granular binning",
      "name": "--nBins",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "Sets the number of bins for granular binning",
      "defaultValue": "499",
      "minValue": "0.0",
      "maxValue": "Infinity",
      "minRecValue": "1.0",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "Do not output depth of coverage at each base",
      "name": "--omitDepthOutputAtEachBase",
      "synonyms": "-omitBaseOutput",
      "type": "boolean",
      "required": "no",
      "fulltext": "Disabling the tabulation of total coverage at every base should speed up processing.",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_flag",
      "options": []
    },
    {
      "summary": "Do not calculate per-interval statistics",
      "name": "--omitIntervalStatistics",
      "synonyms": "-omitIntervals",
      "type": "boolean",
      "required": "no",
      "fulltext": "Disabling the tabulation of interval statistics (mean, median, quartiles AND # intervals by sample by coverage) should speed up processing. This option is required in order to use -nt parallelism.",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_flag",
      "options": []
    },
    {
      "summary": "Do not calculate per-sample per-depth counts of loci",
      "name": "--omitLocusTable",
      "synonyms": "-omitLocusTable",
      "type": "boolean",
      "required": "no",
      "fulltext": "Disabling the tabulation of locus statistics (# loci covered by sample by coverage) should speed up processing.",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_flag",
      "options": []
    },
    {
      "summary": "Do not output the summary files per-sample",
      "name": "--omitPerSampleStats",
      "synonyms": "-omitSampleSummary",
      "type": "boolean",
      "required": "no",
      "fulltext": "This option simply disables writing separate files for per-sample summary statistics (total, mean, median, quartile coverage per sample). These statistics are still calculated internally, so enabling this option will not improve runtime.",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_flag",
      "options": []
    },
    {
      "summary": "An output file created by the walker.  Will overwrite contents if file exists",
      "name": "--out",
      "synonyms": "-o",
      "type": "Map[DoCOutputType,PrintStream]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_out",
      "options": []
    },
    {
      "summary": "The format of the output file",
      "name": "--outputFormat",
      "synonyms": "NA",
      "type": "String",
      "required": "no",
      "fulltext": "Output file format (e.g. csv, table, rtable); defaults to r-readable table.",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Partition type for depth of coverage",
      "name": "--partitionType",
      "synonyms": "-pt",
      "type": "Set[Partition]",
      "required": "no",
      "fulltext": "By default, coverage is partitioning by sample, but it can be any combination of sample, readgroup and/or library.",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Add base counts to per-locus output",
      "name": "--printBaseCounts",
      "synonyms": "-baseCounts",
      "type": "boolean",
      "required": "no",
      "fulltext": "Instead of reporting depth, the program will report the base pileup at each locus",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_flag",
      "options": []
    },
    {
      "summary": "Print the bin values and exit immediately",
      "name": "--printBinEndpointsAndExit",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "Use this option to calibrate what bins you want before performing full calculations on your data.",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_flag",
      "options": []
    },
    {
      "summary": "Starting (left endpoint) for granular binning",
      "name": "--start",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "Sets the low-coverage cutoff for granular binning. All loci with depth \u003c START are counted in the first bin.",
      "defaultValue": "1",
      "minValue": "0.0",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "Ending (right endpoint) for granular binning",
      "name": "--stop",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "Sets the high-coverage cutoff for granular binning. All loci with depth \u003e STOP are counted in the last bin.",
      "defaultValue": "500",
      "minValue": "1.0",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    },
    {
      "summary": "Coverage threshold (in percent) for summarizing statistics",
      "name": "--summaryCoverageThreshold",
      "synonyms": "-ct",
      "type": "int[]",
      "required": "no",
      "fulltext": "For summary file outputs, report the percentage of bases covered to an amount equal to or greater than this number  (e.g. % bases \u003e\u003d CT for each sample). Defaults to 15; can take multiple arguments.",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "advanced_param",
      "options": []
    }
  ],
  "refwindow": {},
  "description": "\n\n \u003cp\u003e\n This tool processes a set of bam files to determine coverage at different levels of partitioning and\n aggregation. Coverage can be analyzed per locus, per interval, per gene, or in total; can be partitioned by\n sample, by read group, by technology, by center, or by library; and can be summarized by mean, median, quartiles,\n and/or percentage of bases covered to or beyond a threshold. Additionally, reads and bases can be filtered by\n mapping or base quality score.\n \u003c/p\u003e\n\n \u003ch3\u003eInput\u003c/h3\u003e\n \u003cul\u003e\n     \u003cli\u003eOne or more bam files (with proper headers) to be analyzed for coverage statistics\u003c/li\u003e\n     \u003cli\u003e(Optional) A REFSEQ file to aggregate coverage to the gene level (for information about creating the REFSEQ Rod, please consult the online documentation)\u003c/li\u003e\n \u003c/ul\u003e\n\n \u003ch3\u003eOutput\u003c/h3\u003e\n \u003cp\u003e\n Tables pertaining to different coverage summaries. Suffix on the table files declares the contents:\n \u003c/p\u003e\n \u003cul\u003e\n     \u003cli\u003eno suffix: per locus coverage\u003c/li\u003e\n     \u003cli\u003e_summary: total, mean, median, quartiles, and threshold proportions, aggregated over all bases\u003c/li\u003e\n     \u003cli\u003e_statistics: coverage histograms (# locus with X coverage), aggregated over all bases\u003c/li\u003e\n     \u003cli\u003e_interval_summary: total, mean, median, quartiles, and threshold proportions, aggregated per interval\u003c/li\u003e\n     \u003cli\u003e_interval_statistics: 2x2 table of # of intervals covered to \u003e\u003d X depth in \u003e\u003dY samples\u003c/li\u003e\n     \u003cli\u003e_gene_summary: total, mean, median, quartiles, and threshold proportions, aggregated per gene\u003c/li\u003e\n     \u003cli\u003e_gene_statistics: 2x2 table of # of genes covered to \u003e\u003d X depth in \u003e\u003d Y samples\u003c/li\u003e\n     \u003cli\u003e_cumulative_coverage_counts: coverage histograms (# locus with \u003e\u003d X coverage), aggregated over all bases\u003c/li\u003e\n     \u003cli\u003e_cumulative_coverage_proportions: proprotions of loci with \u003e\u003d X coverage, aggregated over all bases\u003c/li\u003e\n \u003c/ul\u003e\n\n \u003ch3\u003eUsage example\u003c/h3\u003e\n \u003cpre\u003e\n java -jar GenomeAnalysisTK.jar \\\n   -T DepthOfCoverage \\\n   -R reference.fasta \\\n   -o file_name_base \\\n   -I input_bams.list\n   [-geneList refSeq.sorted.txt] \\\n   [-pt readgroup] \\\n   [-ct 4 -ct 6 -ct 10] \\\n   [-L my_capture_genes.interval_list]\n \u003c/pre\u003e",
  "name": "DepthOfCoverage",
  "annotinfo": "",
  "readfilters": [
    {
      "filename": "org_broadinstitute_gatk_engine_filters_MalformedReadFilter.html",
      "name": "MalformedReadFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_BadCigarFilter.html",
      "name": "BadCigarFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_UnmappedReadFilter.html",
      "name": "UnmappedReadFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_NotPrimaryAlignmentFilter.html",
      "name": "NotPrimaryAlignmentFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_FailsVendorQualityCheckFilter.html",
      "name": "FailsVendorQualityCheckFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_DuplicateReadFilter.html",
      "name": "DuplicateReadFilter"
    }
  ],
  "downsampling": {
    "by": "NONE",
    "to_cov": 2147483647
  },
  "group": "Diagnostics and Quality Control Tools",
  "annotfield": ""
}