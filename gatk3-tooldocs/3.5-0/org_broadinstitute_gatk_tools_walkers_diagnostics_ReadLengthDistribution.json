{
  "summary": "Collect read length statistics",
  "parallel": [],
  "activeregion": {},
  "partitiontype": "READ",
  "walkertype": "ReadWalker",
  "arguments": [
    {
      "summary": "An output file created by the walker.  Will overwrite contents if file exists",
      "name": "--out",
      "synonyms": "-o",
      "type": "PrintStream",
      "required": "no",
      "fulltext": "",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_out",
      "options": []
    }
  ],
  "refwindow": {},
  "description": "\n\n  \u003cp\u003e\n     This tool generates a table with the read lengths categorized per sample. If the file has no sample information\n     (no read groups) it considers all reads to come from the same sample.\n  \u003c/p\u003e\n\n\n \u003ch3\u003eInput\u003c/h3\u003e\n  \u003cp\u003e\n      A BAM file.\n  \u003c/p\u003e\n\n \u003ch3\u003eOutput\u003c/h3\u003e\n  \u003cp\u003e\n      A human/R-readable table of tab-separated values with one column per sample and one row per read.\n  \u003c/p\u003e\n\n \u003ch3\u003eUsage example\u003c/h3\u003e\n  \u003cpre\u003e\n    java -jar GenomeAnalysisTK.jar \\\n      -T ReadLengthDistribution \\\n      -R reference.fasta \\\n      -I example.bam \\\n      -o example.tbl\n  \u003c/pre\u003e",
  "name": "ReadLengthDistribution",
  "annotinfo": "",
  "readfilters": [
    {
      "filename": "org_broadinstitute_gatk_engine_filters_MalformedReadFilter.html",
      "name": "MalformedReadFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_BadCigarFilter.html",
      "name": "BadCigarFilter"
    }
  ],
  "downsampling": {
    "by": "NONE",
    "to_cov": -1
  },
  "group": "Diagnostics and Quality Control Tools",
  "annotfield": ""
}