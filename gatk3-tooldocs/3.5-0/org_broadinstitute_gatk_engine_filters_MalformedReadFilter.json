{
  "summary": "Filter out malformed reads",
  "parallel": [],
  "activeregion": {},
  "partitiontype": "",
  "walkertype": "",
  "arguments": [
    {
      "summary": "Filter out reads with no stored bases (i.e. \u0027*\u0027 where the sequence should be), instead of failing with an error",
      "name": "--filter_bases_not_stored",
      "synonyms": "-filterNoBases",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_flag",
      "options": []
    },
    {
      "summary": "Filter out reads with mismatching numbers of bases and base qualities, instead of failing with an error",
      "name": "--filter_mismatching_base_and_quals",
      "synonyms": "-filterMBQ",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_flag",
      "options": []
    },
    {
      "summary": "Filter out reads with CIGAR containing the N operator, instead of failing with an error",
      "name": "--filter_reads_with_N_cigar",
      "synonyms": "-filterRNC",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_flag",
      "options": []
    }
  ],
  "refwindow": {},
  "description": "\n\n \u003cp\u003eThis filter is applied automatically by all GATK tools in order to protect them from crashing on reads that are\n grossly malformed. There are a few issues (such as the absence of sequence bases) that will cause the run to fail with an\n error, but these cases can be preempted by setting flags that cause the problem reads to also be filtered.\u003c/p\u003e\n\n \u003ch3\u003eUsage example\u003c/h3\u003e\n\n \u003ch4\u003eSet the malformed read filter to filter out reads that have no sequence bases\u003c/h4\u003e\n \u003cpre\u003e\n     java -jar GenomeAnalysisTk.jar \\\n         -T ToolName \\\n         -R reference.fasta \\\n         -I input.bam \\\n         -o output.file \\\n         -filterNoBases\n \u003c/pre\u003e\n\n \u003cp\u003eNote that the MalformedRead filter itself does not need to be specified in the command line because it is set\n automatically.\u003c/p\u003e",
  "name": "MalformedReadFilter",
  "annotinfo": "",
  "readfilters": [],
  "downsampling": {},
  "group": "Read Filters",
  "annotfield": ""
}