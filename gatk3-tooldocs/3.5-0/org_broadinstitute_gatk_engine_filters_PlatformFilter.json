{
  "summary": "Filter out reads that were generated by a specific sequencing platform",
  "parallel": [],
  "activeregion": {},
  "partitiontype": "",
  "walkertype": "",
  "arguments": [
    {
      "summary": "Discard reads with RG:PL attribute containing this string",
      "name": "--PLFilterName",
      "synonyms": "-PLFilterName",
      "type": "String[]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    }
  ],
  "refwindow": {},
  "description": "\n\n \u003cp\u003eThis filter is useful for running on only a subset of the data as identified by a read group property.\n In the case of the platform filter, the goal is usually to blacklist certain sequencing technologies at certain processing steps\n if we know there is an incompatibility problem (like 454 and indel realignment, which is special-cased).\u003c/p\u003e\n\n \u003ch3\u003eUsage example\u003c/h3\u003e\n\n \u003cpre\u003e\n     java -jar GenomeAnalysisTk.jar \\\n         -T ToolName \\\n         -R reference.fasta \\\n         -I input.bam \\\n         -o output.file \\\n         -rf Platform \\\n         -PLFilterName platform_name\n \u003c/pre\u003e",
  "name": "PlatformFilter",
  "annotinfo": "",
  "readfilters": [],
  "downsampling": {},
  "group": "Read Filters",
  "annotfield": ""
}