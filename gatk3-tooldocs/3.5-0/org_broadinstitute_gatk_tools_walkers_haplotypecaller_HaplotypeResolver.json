{
  "summary": "Haplotype-based resolution of variants in separate callsets.",
  "parallel": [],
  "activeregion": {},
  "partitiontype": "LOCUS",
  "walkertype": "LocusWalker",
  "arguments": [
    {
      "summary": "File to which variants should be written",
      "name": "--out",
      "synonyms": "-o",
      "type": "VariantContextWriter",
      "required": "no",
      "fulltext": "",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_out",
      "options": []
    },
    {
      "summary": "Key used in the INFO key\u003dvalue tag emitted describing which set the combined VCF record came from",
      "name": "--setKey",
      "synonyms": "-setKey",
      "type": "String",
      "required": "no",
      "fulltext": "Set to \u0027null\u0027 if you don\u0027t want the set field emitted.",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Key used in the INFO key\u003dvalue tag emitted describing the extent to which records match",
      "name": "--statusKey",
      "synonyms": "-statusKey",
      "type": "String",
      "required": "no",
      "fulltext": "Set to \u0027null\u0027 if you don\u0027t want the status field emitted.",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Input VCF file",
      "name": "--variant",
      "synonyms": "-V",
      "type": "List[RodBinding[VariantContext]]",
      "required": "yes",
      "fulltext": "",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "\u003ca href\u003dhtsjdk_variant_bcf2_BCF2Codec.html\u003eBCF2\u003c/a\u003e, \u003ca href\u003dhtsjdk_variant_vcf_VCFCodec.html\u003eVCF\u003c/a\u003e, \u003ca href\u003dhtsjdk_variant_vcf_VCF3Codec.html\u003eVCF3\u003c/a\u003e",
      "kind": "required_in",
      "options": []
    }
  ],
  "refwindow": {
    "stop": 1100,
    "start": -1100
  },
  "description": "\n\n \u003cp\u003e\n HaplotypeResolver is a tool that takes two VCF files and constructs haplotypes based on the variants inside them.\n From that, it can resolve potential differences in variant calls that are inherently the same (or similar) variants.\n Records are annotated with the set and status attributes.\n \u003c/p\u003e\n\n \u003ch3\u003eInput\u003c/h3\u003e\n \u003cp\u003e\n Two variant files to resolve.\n \u003c/p\u003e\n\n \u003ch3\u003eOutput\u003c/h3\u003e\n \u003cp\u003e\n A single consensus VCF.\n \u003c/p\u003e\n\n \u003ch3\u003eUsage example\u003c/h3\u003e\n \u003cpre\u003e\n java -jar GenomeAnalysisTK.jar \\\n   -T HaplotypeResolver \\\n   -R reference.fasta \\\n   -V:v1 input1.vcf \\\n   -V:v2 input2.vcf \\\n   -o output.vcf\n \u003c/pre\u003e",
  "name": "HaplotypeResolver",
  "annotinfo": "",
  "readfilters": [
    {
      "filename": "org_broadinstitute_gatk_engine_filters_MalformedReadFilter.html",
      "name": "MalformedReadFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_BadCigarFilter.html",
      "name": "BadCigarFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_UnmappedReadFilter.html",
      "name": "UnmappedReadFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_NotPrimaryAlignmentFilter.html",
      "name": "NotPrimaryAlignmentFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_FailsVendorQualityCheckFilter.html",
      "name": "FailsVendorQualityCheckFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_DuplicateReadFilter.html",
      "name": "DuplicateReadFilter"
    }
  ],
  "downsampling": {},
  "group": "Variant Evaluation and Manipulation Tools",
  "annotfield": ""
}