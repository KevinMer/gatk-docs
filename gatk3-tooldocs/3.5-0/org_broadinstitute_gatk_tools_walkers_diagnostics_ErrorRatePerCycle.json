{
  "summary": "Compute the read error rate per position",
  "parallel": [],
  "activeregion": {},
  "partitiontype": "LOCUS",
  "walkertype": "LocusWalker",
  "arguments": [
    {
      "summary": "Minimum base quality required to consider a base for calling",
      "name": "--min_base_quality_score",
      "synonyms": "-mbq",
      "type": "Integer",
      "required": "no",
      "fulltext": "",
      "defaultValue": "0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "Minimum read mapping quality required to consider a read for calling",
      "name": "--min_mapping_quality_score",
      "synonyms": "-mmq",
      "type": "Integer",
      "required": "no",
      "fulltext": "",
      "defaultValue": "20",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_param",
      "options": []
    },
    {
      "summary": "An output file created by the walker.  Will overwrite contents if file exists",
      "name": "--out",
      "synonyms": "-o",
      "type": "PrintStream",
      "required": "no",
      "fulltext": "",
      "defaultValue": "NA",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "rodTypes": "NA",
      "kind": "optional_out",
      "options": []
    }
  ],
  "refwindow": {},
  "description": "\n\n \u003cp\u003eThis tool computes the read error rate per position in sequence reads. It does this in the original 5\u0027-\u003e3\u0027\n orientation that the read had coming off the machine. It then emits a GATKReport containing readgroup, cycle,\n mismatches, counts, qual, and error rate for each read group in the input BAMs.\u003c/p\u003e\n\n \u003ch3\u003eInput\u003c/h3\u003e\n  \u003cp\u003e\n      Any number of BAM files\n  \u003c/p\u003e\n\n \u003ch3\u003eOutput\u003c/h3\u003e\n  \u003cp\u003e\n      A GATKReport containing readgroup, cycle, mismatches, counts, qual, and error rate.\n\n      For example, running this tool on the NA12878 data sets yields the following table:\n\n      \u003cpre\u003e\n      ##:GATKReport.v0.2 ErrorRatePerCycle : The error rate per sequenced position in the reads\n      readgroup  cycle  mismatches  counts  qual  errorrate\n      20FUK.1        0          80   23368    25   3.47e-03\n      20FUK.1        1          40   23433    28   1.75e-03\n      20FUK.1        2          36   23453    28   1.58e-03\n      20FUK.1        3          26   23476    29   1.15e-03\n      20FUK.1        4          32   23495    29   1.40e-03\n      up to 101 cycles\n      20FUK.2        0          77   20886    24   3.73e-03\n      20FUK.2        1          28   20920    29   1.39e-03\n      20FUK.2        2          24   20931    29   1.19e-03\n      20FUK.2        3          30   20940    28   1.48e-03\n      20FUK.2        4          25   20948    29   1.24e-03\n      up to 101 cycles\n      20FUK.3        0          78   22038    24   3.58e-03\n      20FUK.3        1          40   22091    27   1.86e-03\n      20FUK.3        2          23   22108    30   1.09e-03\n      20FUK.3        3          36   22126    28   1.67e-03\n      \u003c/pre\u003e\n  \u003c/p\u003e\n\n \u003ch3\u003eUsage example\u003c/h3\u003e\n  \u003cpre\u003e\n    java -jar GenomeAnalysisTK.jar \\\n      -T ErrorRatePerCycle \\\n      -R reference.fasta \\\n      -I my_sequence_reads.bam \\\n      -o error_rates.gatkreport.txt\n  \u003c/pre\u003e\n\n \u003ch3\u003eCaveat\u003c/h3\u003e\n\n \u003cp\u003eWhen it is run on paired-end sequence data, this tool only uses the first read in a pair.\u003c/p\u003e",
  "name": "ErrorRatePerCycle",
  "annotinfo": "",
  "readfilters": [
    {
      "filename": "org_broadinstitute_gatk_engine_filters_MalformedReadFilter.html",
      "name": "MalformedReadFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_BadCigarFilter.html",
      "name": "BadCigarFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_UnmappedReadFilter.html",
      "name": "UnmappedReadFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_NotPrimaryAlignmentFilter.html",
      "name": "NotPrimaryAlignmentFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_FailsVendorQualityCheckFilter.html",
      "name": "FailsVendorQualityCheckFilter"
    },
    {
      "filename": "org_broadinstitute_gatk_engine_filters_DuplicateReadFilter.html",
      "name": "DuplicateReadFilter"
    }
  ],
  "downsampling": {
    "by": "BY_SAMPLE",
    "to_cov": 1000
  },
  "group": "Diagnostics and Quality Control Tools",
  "annotfield": ""
}